-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.album
(
    album_id integer NOT NULL,
    title character varying COLLATE pg_catalog."default",
    artist_id integer,
    CONSTRAINT album_id PRIMARY KEY (album_id)
);

CREATE TABLE IF NOT EXISTS public.artist
(
    artist_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT artist_id PRIMARY KEY (artist_id)
);

CREATE TABLE IF NOT EXISTS public.customer
(
    customer_id integer NOT NULL,
    first_name character varying COLLATE pg_catalog."default",
    last_name character varying COLLATE pg_catalog."default",
    company character varying COLLATE pg_catalog."default",
    address character varying COLLATE pg_catalog."default",
    city character varying COLLATE pg_catalog."default",
    state character varying COLLATE pg_catalog."default",
    country character varying COLLATE pg_catalog."default",
    postal_code character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    fax character varying COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default",
    support_rep_id integer,
    CONSTRAINT customer_id PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.employee
(
    employee_id integer NOT NULL,
    last_name character varying COLLATE pg_catalog."default",
    first_name character varying COLLATE pg_catalog."default",
    title character varying COLLATE pg_catalog."default",
    reports_to integer,
    levels character varying COLLATE pg_catalog."default",
    birthdate date,
    hire_date date,
    address character varying COLLATE pg_catalog."default",
    city character varying COLLATE pg_catalog."default",
    state character varying COLLATE pg_catalog."default",
    country character varying COLLATE pg_catalog."default",
    postal_code character varying COLLATE pg_catalog."default",
    phone character varying COLLATE pg_catalog."default",
    fax character varying COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default",
    CONSTRAINT employee_id PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.genre
(
    genre_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT genre_id PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS public.invoice
(
    invoice_id integer NOT NULL,
    customer_id integer,
    invoice_date date,
    billing_address character varying COLLATE pg_catalog."default",
    billing_city character varying COLLATE pg_catalog."default",
    billing_state character varying COLLATE pg_catalog."default",
    billing_country character varying COLLATE pg_catalog."default",
    billing_postal character varying COLLATE pg_catalog."default",
    total double precision,
    CONSTRAINT invoice_id PRIMARY KEY (invoice_id)
);

CREATE TABLE IF NOT EXISTS public.invoice_line
(
    invoice_line_id integer NOT NULL,
    invoice_id integer,
    track_id integer,
    unit_price double precision,
    quantity integer,
    CONSTRAINT invoice_line_id PRIMARY KEY (invoice_line_id)
);

CREATE TABLE IF NOT EXISTS public.media_type
(
    media_type_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT media_type_id PRIMARY KEY (media_type_id)
);

CREATE TABLE IF NOT EXISTS public.playlist
(
    playlist_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT playlist_id PRIMARY KEY (playlist_id)
);

CREATE TABLE IF NOT EXISTS public.playlist_track
(
    playlist_id integer,
    track_id integer
);

CREATE TABLE IF NOT EXISTS public.track
(
    track_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    album_id integer,
    media_type_id integer,
    genre_id integer,
    composer character varying COLLATE pg_catalog."default",
    milliseconds integer,
    bytes integer,
    unit_price double precision,
    CONSTRAINT track_id PRIMARY KEY (track_id)
);

ALTER TABLE IF EXISTS public.album
    ADD CONSTRAINT artist_id FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.customer
    ADD CONSTRAINT support_rep_id FOREIGN KEY (support_rep_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.invoice
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.invoice_line
    ADD CONSTRAINT invoice_id FOREIGN KEY (invoice_id)
    REFERENCES public.invoice (invoice_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.playlist_track
    ADD CONSTRAINT playlist_id FOREIGN KEY (playlist_id)
    REFERENCES public.playlist (playlist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.playlist_track
    ADD CONSTRAINT track_id FOREIGN KEY (track_id)
    REFERENCES public.track (track_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.track
    ADD CONSTRAINT genre_id FOREIGN KEY (genre_id)
    REFERENCES public.genre (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.track
    ADD CONSTRAINT album_id FOREIGN KEY (album_id)
    REFERENCES public.album (album_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.track
    ADD CONSTRAINT media_type_id FOREIGN KEY (media_type_id)
    REFERENCES public.media_type (media_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;